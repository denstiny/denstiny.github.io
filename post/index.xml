<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Sooner or later, personal blog</title>
    <link>https://denstiny.github.io/post/</link>
    <description>Recent content in Posts on Sooner or later, personal blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 27 Feb 2022 14:12:21 +0800</lastBuildDate><atom:link href="https://denstiny.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python上传图片到图床</title>
      <link>https://denstiny.github.io/python%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%88%B0%E5%9B%BE%E5%BA%8A/</link>
      <pubDate>Sun, 27 Feb 2022 14:12:21 +0800</pubDate>
      
      <guid>https://denstiny.github.io/python%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%88%B0%E5%9B%BE%E5%BA%8A/</guid>
      <description>python上传图片到图床  python代码  效果   github链接    python上传图片到图床  代码讲解就不说了，注释应该很详细了,说下为什么写下这个脚本吧
作为一个vim 死忠粉，在使用vim 写makrdown文档的时候，总是为上传图片而犯难，总是要切换到浏览器捣鼓一阵子，比较影响写作体验，所以写下这个脚本
  python代码  postImage.py
 &amp;#34;&amp;#34;&amp;#34; @author : aero (2254228017@qq.com) @file : imagePost @created : 星期六 2月 26, 2022 20:08:57 CST @github : https://github.com/denstiny @blog : https://denstiny.github.io &amp;#34;&amp;#34;&amp;#34; import os import json import sys import requests import subprocess import datetime root = {&amp;#39;遇见图床&amp;#39;: {&amp;#39;url&amp;#39;:&amp;#39;https://www.hualigs.cn/api/upload&amp;#39;, &amp;#39;token&amp;#39;:&amp;#39;xxx&amp;#39;}, &amp;#39;牛图网&amp;#39;: {&amp;#39;url&amp;#39;:&amp;#39;https://www.niupic.com/api/upload&amp;#39;, &amp;#39;token&amp;#39;:&amp;#39;xxx&amp;#39;}} class PostImage: def __init__(self): pass def currentTime(self,filetype): &amp;#34;&amp;#34;&amp;#34; Args: filetype (): 文件后缀 Returns: 返回当前时间的文件名称 &amp;#34;&amp;#34;&amp;#34; time = datetime.</description>
    </item>
    
    <item>
      <title>无聊的一天</title>
      <link>https://denstiny.github.io/%E6%97%A0%E8%81%8A%E7%9A%84%E4%B8%80%E5%A4%A9/</link>
      <pubDate>Wed, 23 Feb 2022 08:47:19 +0800</pubDate>
      
      <guid>https://denstiny.github.io/%E6%97%A0%E8%81%8A%E7%9A%84%E4%B8%80%E5%A4%A9/</guid>
      <description> 老师又在讲这些本来一条命令就能安装的东西,非要下载然后解压缩，构建，复制 
  昨天还下雪了了，今天地上全是水，真的是 哎呀这可能是南昌今年最后一场雪了 
 </description>
    </item>
    
    <item>
      <title>Linux自动禁用键盘鼠标</title>
      <link>https://denstiny.github.io/linux%E8%87%AA%E5%8A%A8%E7%A6%81%E7%94%A8%E9%94%AE%E7%9B%98%E9%BC%A0%E6%A0%87/</link>
      <pubDate>Mon, 21 Feb 2022 23:07:55 +0800</pubDate>
      
      <guid>https://denstiny.github.io/linux%E8%87%AA%E5%8A%A8%E7%A6%81%E7%94%A8%E9%94%AE%E7%9B%98%E9%BC%A0%E6%A0%87/</guid>
      <description>linux自动禁用鼠标键盘 我当前使用的是awesome wm桌面环境，由于桌子比较小，所以外接的键盘是直接放在笔记本上面，另外还接了蓝牙鼠标，为了避免误触需要把默认的键盘鼠标禁用掉，但是每次开机都要自己手动禁用感觉很麻烦想写个脚本
xinput 命令查看当前笔记本连接的设备 使用方法
xinput Results:
⎡ Virtual core pointer id=2	[master pointer (3)] ⎜ ↳ Virtual core XTEST pointer id=4	[slave pointer (2)] ⎜ ↳ SYNA1202:00 06CB:CD65 Mouse id=20	[slave pointer (2)] ⎜ ↳ 2.4G Mouse Consumer Control id=15	[slave pointer (2)] ⎜ ↳ 2.4G Mouse id=17	[slave pointer (2)] ⎜ ↳ Compx 2.4G Wireless Receiver Mouse id=13	[slave pointer (2)] ⎜ ↳ Compx 2.4G Wireless Receiver Keyboard id=14	[slave pointer (2)] ⎜ ↳ SYNA1202:00 06CB:CD65 Touchpad id=21	[slave pointer (2)] ⎣ Virtual core keyboard id=3	[master keyboard (2)] ↳ Virtual core XTEST keyboard id=5	[slave keyboard (3)] ↳ Power Button id=6	[slave keyboard (3)] ↳ Video Bus id=7	[slave keyboard (3)] ↳ Video Bus id=8	[slave keyboard (3)] ↳ Power Button id=9	[slave keyboard (3)] ↳ Lid Switch id=10	[slave keyboard (3)] ↳ Sleep Button id=11	[slave keyboard (3)] ↳ Chicony USB2.</description>
    </item>
    
    <item>
      <title>Wezterm终端</title>
      <link>https://denstiny.github.io/wezterm%E7%BB%88%E7%AB%AF/</link>
      <pubDate>Mon, 21 Feb 2022 22:57:34 +0800</pubDate>
      
      <guid>https://denstiny.github.io/wezterm%E7%BB%88%E7%AB%AF/</guid>
      <description>wezterm  使用gpu加速终端，动态渲染终端内容,使用lua作为配置，具有高度自定义
 
配置文件 local wezterm = require &amp;#39;wezterm&amp;#39;; -- window resize event config require(&amp;#34;wezterm-resize-config&amp;#34;) -- key require(&amp;#34;key-bind&amp;#34;) -- A helper function for my fallback fonts function font_with_fallback(name, params) local names = {name, &amp;#34;DengXian&amp;#34;,&amp;#34;Noto Color Emoji&amp;#34;, &amp;#34;JetBrains &amp;#34;} return wezterm.font_with_fallback(names, params) end wezterm.on(&amp;#34;window-config-reloaded&amp;#34;, function(window, pane) wezterm.log_info(&amp;#34;the config was reloaded for this window!&amp;#34;); end) return { warn_about_missing_glyphs=false, window_padding = { left = 0, right = 0, top = 0, bottom = 0 }, color_scheme = &amp;#34;Lavandula&amp;#34;, scrollback_lines=99999, harfbuzz_features = {&amp;#34;zero&amp;#34;}, hide_tab_bar_if_only_one_tab = false, enable_tab_bar = false, freetype_load_target = &amp;#34;Light&amp;#34;, font_size = 16.</description>
    </item>
    
  </channel>
</rss>
